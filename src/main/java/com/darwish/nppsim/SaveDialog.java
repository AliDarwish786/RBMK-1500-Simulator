package com.darwish.nppsim;

import java.io.File;
import java.net.URI;
import org.apache.commons.lang3.exception.ExceptionUtils;

public class SaveDialog extends javax.swing.JFrame implements UIUpdateable {

    /**
     * Creates new form SaveDialog
     */
    public SaveDialog() {
        initComponents();
        try { //ignore IDE nagging about using utilities for conversion
            String uriString = getClass().getProtectionDomain().getCodeSource().getLocation().toURI().toString();
            jFileChooser1.setCurrentDirectory(new File(new URI(uriString.substring(0, uriString.lastIndexOf("RBMK-1500-Simulator.jar")) + "/IC/")));
        } catch (Exception e) {
            try {
                jFileChooser1.setCurrentDirectory(new File(getClass().getProtectionDomain().getCodeSource().getLocation().toURI()));
            } catch (Exception ex) {
                new ErrorWindow("Error while setting directory for saving IC", ExceptionUtils.getStackTrace(ex), false).setVisible(true);
            }
        } 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jFileChooser1.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        jFileChooser1.setApproveButtonText("Save");
        jFileChooser1.setCurrentDirectory(new java.io.File("/home/ali"));
        jFileChooser1.setDialogTitle("Save IC");
        jFileChooser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jFileChooser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser1ActionPerformed
        String command = evt.getActionCommand();
        if (command.equals("ApproveSelection")) {
            File file = jFileChooser1.getSelectedFile();
            NPPSim.save(file);
            UI.elementsToUpdate.remove(this);
            this.dispose();
        } else if (command.equals("CancelSelection")) {
            UI.elementsToUpdate.remove(this);
            this.dispose();
        }
    }//GEN-LAST:event_jFileChooser1ActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        UI.elementsToUpdate.remove(this);
    }//GEN-LAST:event_formWindowClosed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser jFileChooser1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update() {
        
    }

    @Override
    public void initializeDialUpdateThread() {
        
    }

    @Override
    public void setVisibility(boolean visible) {
        this.setVisible(visible);
    }
    
    @Override
    public void discard() {
        this.setVisible(false);
    }
}
